import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import requests
from config import BOT_TOKEN, HUGGINGFACE_API_KEY

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

WELCOME_MESSAGE = """üé® –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ë–ï–°–ü–õ–ê–¢–ù–´–ô –ê—Ä—Ç-–ë–æ—Ç! 

–°–æ–∑–¥–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ç–≤–æ–∏–º –æ–ø–∏—Å–∞–Ω–∏—è–º!

–ü–∏—à–∏: /–∞—Ä—Ç –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º
–ò–ª–∏: /–∞—Ä—Ç –∫–æ—Ç –≤ –∫–æ—Å–º–æ—Å–µ

‚ú® –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!
"""

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(WELCOME_MESSAGE)

@dp.message(Command("–∞—Ä—Ç"))
async def cmd_art(message: types.Message):
    description = message.text[4:].strip()
    
    if not description:
        await message.answer("–ü–∏—à–∏: /–∞—Ä—Ç [–æ–ø–∏—Å–∞–Ω–∏–µ]. –ù–∞–ø—Ä–∏–º–µ—Ä: /–∞—Ä—Ç –∫–æ—Ç –≤ —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π—Å–∫–æ–º –∫–æ—Å—Ç—é–º–µ")
        return
    
    await message.answer("üé® –°–æ–∑–¥–∞—é –∞—Ä—Ç... –ñ–¥–∏ 20-60 —Å–µ–∫—É–Ω–¥ ‚è≥")
    
    try:
        API_URL = "https://api-inference.huggingface.co/models/stabilityai/stable-diffusion-2-1"
        headers = {"Authorization": f"Bearer {HUGGINGFACE_API_KEY}"}
        payload = {"inputs": f"digital art, {description}, detailed, beautiful"}
        
        response = requests.post(API_URL, headers=headers, json=payload)
        
        if response.status_code == 200:
            await message.answer_photo(
                photo=response.content,
                caption=f"üé® –ì–æ—Ç–æ–≤–æ!\n'{description}'"
            )
        else:
            await message.answer("üé® –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è... –ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ 1-2 –º–∏–Ω—É—Ç—ã!")
                
    except Exception as e:
        await message.answer("üé® –û—à–∏–±–∫–∞ üòÖ –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ!")

@dp.message()
async def handle_message(message: types.Message):
    await message.answer("üé® –ü–∏—à–∏: /–∞—Ä—Ç [–æ–ø–∏—Å–∞–Ω–∏–µ]")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
